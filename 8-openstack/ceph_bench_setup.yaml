---
heat_template_version: 2015-10-15

# This is a Heat stack for automating creation of a configured number of
# cmopute instances, with two Cinder volumes attached to each.
#
# The Heat stack is created using (for example):
# heat stack-create ceph_bench -f ceph_bench_setup.yaml -e devel-stack.yaml
#
# The resources used in the test configuration are then deleted using:
# heat stack-delete ceph_bench
#
# Parameters are typically redefined according to local config in an
# environment file (see prod-stack.yaml and devel-stack.yaml)

description: >
  Heat stack for orchestrating Ceph test client infrastructure:
  a number of (Ceph backed) Cinder volumes, a group of Nova instances
  to function as Ceph clients and attachment of volumes to clients.

parameters:
  client_count:
    type: number
    label: Number of client instances to create
    default: 4
  client_net_name:
    type: string
    label: Name of the Ceph client VTN
    default: 'ceph_client_net'
  stack_dns:
    type: json
    label: List of nameserver IPs to provide to instances
    default: [ "131.111.8.42" ]
  floating_network:
    type: string
    label: The network from which a floating IP is allocated
  client_secgroup:
    type: string
    label: The name of the security group created for SSH access to Ceph clients
    default: 'Ceph-SSH'

resources:
  client_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: client_net_name }
      shared: False
      admin_state_up: True
      port_security_enabled: True

  client_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: 'ceph_bench_subnet'
      network: { get_resource: client_net }
      cidr: '192.168.4.0/24'
      enable_dhcp: True
      dns_nameservers: { get_param: stack_dns }

  client_gw:
    type: OS::Neutron::Router
    properties:
      name: 'ceph_bench_gw'
      external_gateway_info:
        network: { get_param: floating_network }

  client_gw_if:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: client_gw }
      subnet_id: { get_resource: client_subnet }

  client_fw_ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { get_param: client_secgroup }
      description: 'Enable SSH access to Ceph benchmark clients'
      rules: [ { direction: 'ingress', ethertype: 'IPv4', protocol: 'tcp', port_range_min: 22, port_range_max: 22 } ]

  client_group:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: client_count }
      resource_def:
        type: client_instance.yaml
        properties:
          client_name: client-%index%
          client_network: { get_param: client_net_name }
          client_secgroup: { get_param: client_secgroup }

